---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 8.9.0
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
    timeout: 15m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:14.10
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    rbac:
      pspEnabled: false
    deploymentStrategy:
      type: Recreate
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_AUTH_ANONYMOUS_ENABLED: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_NEWS_NEWS_FEED_ENABLED: false
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      # GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
      GF_SERVER_ROOT_URL: https://grafana.eviljungle.com
      GF_SECURITY_COOKIE_SAMESITE: grafana
    envFromSecrets:
      - name: grafana-secret
    ingress:
      enabled: true
      ingressClassName: nginx-tailscale
      hosts: [grafana.eviljungle.com]
      tls:
      - hosts:
        - grafana.eviljungle.com
    plugins:
    - pr0ps-trackmap-panel
    - natel-plotly-panel
    - vonage-status-panel
    - grafana-piechart-panel
    - https://github.com/panodata/panodata-map-panel/releases/download/0.16.0/panodata-map-panel-0.16.0.zip;grafana-worldmap-panel-ng
    - grafana-clock-panel
    - grafana-worldmap-panel
    - natel-discrete-panel
    serviceMonitor:
      enabled: true
    serviceAccount:
      autoMount: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: ceph
            orgId: 1
            folder: Ceph
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/ceph
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: nginx
            orgId: 1
            folder: Nginx
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/nginx
          - name: 'teslamate'
            orgId: 1
            folder: Teslamate
            type: file
            disableDeletion: false
            # updateIntervalSeconds: -1
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/teslamate
          - name: thanos
            orgId: 1
            folder: Thanos
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/thanos
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11074-node-exporter-for-prometheus-dashboard-en-v20201010/
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        frigate:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/frigate.json
          datasource: Prometheus
        home-assistant:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
          datasource: home_assistant
        # Ref: https://grafana.com/grafana/dashboards/13177-ipmi-for-prometheus/
        ipmi:
          gnetId: 13177
          revision: 2
          datasource: Prometheus
        loki:
          gnetId: 13407
          revision: 1
          datasource: Prometheus
        loki-logs:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/loki_logs.json
          datasource: Loki
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 36
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
        opnsense:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/opnsense.json
          datasource: Prometheus
        prometheus-exporter-summary:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
          datasource: Prometheus
        smartctl:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/smartctl-exporter.json
          datasource: Prometheus
        speedtest-exporter:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/speedtest-exporter.json
          datasource: Prometheus
        speedtest-exporter-hub:
          # renovate: dashboardName="Speedtest-Exporter Dashboard"
          gnetId: 13665
          revision: 4
          datasource:
            - name: "DS_PROMETHEUS"
              value: Prometheus
        spegel:
          # renovate: depName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        trivy:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-addons-trivy-operator.json
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        ups:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/ups.json
          datasource: Prometheus
        uptimerobot:
          url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/3170-zfs/
        zfs:
          gnetId: 3170
          revision: 3
          datasource: Prometheus
        zfs-new:
          # renovate: dashboardName="ZFS"
          gnetId: 7845
          revision: 4
          datasource: Prometheus

      ceph:
        ceph-cluster:
          # renovate: dashboardName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: dashboardName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: dashboardName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus

      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus

      kubernetes:
        k8s-system-api-server:
          # renovate: dashboardName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 19
          datasource: Prometheus
        k8s-views-global:
          # renovate: dashboardName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 43
          datasource: Prometheus
        k8s-views-nodes:
          # renovate: dashboardName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 34
          datasource: Prometheus
        k8s-views-namespaces:
          # renovate: dashboardName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 42
          datasource: Prometheus
        k8s-views-pods:
          # renovate: dashboardName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 36
          datasource: Prometheus
        k8s-volumes:
          # renovate: dashboardName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      nginx:
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus

      teslamate:
        battery-health:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/battery-health.json
        charge-level:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charge-level.json
        charges:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charges.json
        charging-stats:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charging-stats.json
        drive-stats:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/drive-stats.json
        drives:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/drives.json
        efficiency:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/efficiency.json
        locations:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/locations.json
        mileage:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/mileage.json
        overview:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/overview.json
        projected-range:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/projected-range.json
        states:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/states.json
        statistics:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/statistics.json
        timeline:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/timeline.json
        trip:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/trip.json
        updates:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/updates.json
        vampire-drain:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/vampire-drain.json
        visited:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/visited.json
        charge-details:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/internal/charge-details.json
        drive-details:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/internal/drive-details.json

      thanos:
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus

        volsync:
          # removate: dashboardName="VolSync Dashboard"
          gnetId: 21356
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }


    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Prometheus
            orgId: 1
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
            isDefault: true
            jsonData:
              prometheusType: Thanos
              timeInterval: 1m
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.logs.svc.cluster.local:80
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: influxdb
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: telegraf
          - name: comcast
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: comcast
          - name: home_assistant
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: home_assistant
          - name: speedtests
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: speedtests
          - name: uptimerobot
            type: influxdb
            access: proxy
            url: http://influxdb:8086
            database: uptimerobot
          - name: TeslaMate
            type: postgres
            access: proxy
            url: postgres-v15-rw.default.svc.cluster.local:5432
            database: teslamate
            user: teslamate
            secureJsonData:
              password: "$TESLAMATE_DB_PASSWORD"
            jsonData:
              postgresVersion: 1000
              sslmode: disable
    grafana.ini:
      auth:
        oauth_allow_insecure_email_lookup: false
      auth.basic:
        disable_login_form: true
      auth.azuread:
        enabled: true
        allow_sign_up: true
        auto_login: false
        team_ids:
        allowed_organizations:
        name: Azure AD
        scopes: openid profile email
