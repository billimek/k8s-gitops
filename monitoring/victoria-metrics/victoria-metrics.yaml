apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vm
  namespace: monitoring
spec:
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      version: 0.36.1
      sourceRef:
        kind: HelmRepository
        name: victoriametrics-charts
        namespace: flux-system
  interval: 15m
  maxHistory: 3
  install:
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    fullnameOverride: stack
    victoria-metrics-operator:
      enabled: true
      env:
        - name: VM_VMALERTDEFAULT_CONFIGRELOADERCPU
          value: 0
        - name: VM_VMAGENTDEFAULT_CONFIGRELOADERCPU
          value: 0
        - name: VM_VMALERTMANAGER_CONFIGRELOADERCPU
          value: 0

    defaultDashboards:
      enabled: true
      grafanaOperator:
        # -- Create dashboards as CRDs (requires grafana-operator to be installed)
        enabled: false

    vmsingle:
      enabled: true
      spec:
        # -- Data retention period. Possible units character: h(ours), d(ays), w(eeks), y(ears), if no unit character specified - month. The minimum retention period is 24h. See these [docs](https://docs.victoriametrics.com/single-server-victoriametrics/#retention)
        retentionPeriod: "3"
        replicaCount: 1
        storage:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 60Gi
        resources:
          limits:
            memory: 1.2Gi
          requests:
            cpu: 530m
            memory: 1.2Gi

      ingress:
        enabled: true
        ingressClassName: nginx-tailscale
        hosts:
        - vm.eviljungle.com
        tls:
        - hosts:
          - vm.eviljungle.com

    alertmanager:
      enabled: true
      spec:
        externalURL: "https://vm-alert.eviljungle.com"
      ingress:
        enabled: true
        ingressClassName: nginx-tailscale
        hosts:
        - vm-alert.eviljungle.com
        tls:
        - hosts:
          - vm-alert.eviljungle.com
      config:
        route:
          group_by: ["alertname", "job"]
          group_wait: 45s
          group_interval: 10m
          repeat_interval: 12h
          routes:
          - matchers:
            - alertname=~"WatchDog|InfoInhibitor|KubeMemoryOvercommit"
            receiver: 'blackhole'
          - matchers:
            - severity=~"warning|critical"
            receiver: slack-notifications
        inhibit_rules:
          - source_matchers:
              - severity = "critical"
            target_matchers:
              - severity = "warning"
            equal: ["alertname", "namespace"]
        receivers:
        - name: 'blackhole'
        - name: 'slack-notifications'
          slack_configs:
            - channel: '#notifications'
              icon_url: https://avatars3.githubusercontent.com/u/3380462
              username: 'Alertmanager'
              send_resolved: true
              title: |-
                [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}
              text: >-
                {{ range .Alerts -}}
                  *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

                {{ if ne .Annotations.summary ""}}*Summary:* {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}*Message:* {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}*Description:* {{ .Annotations.description }}{{ end }}

                *Details:*
                  {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                  {{ end }}
                {{ end }}

    vmalert:
      enabled: true
      spec:
        extraArgs:
          external.url: "https://vmalert.eviljungle.com"
      ingress:
        enabled: true
        ingressClassName: nginx-tailscale
        hosts:
        - vmalert.eviljungle.com
        tls:
        - hosts:
          - vmalert.eviljungle.com

    vmagent:
      enabled: true
      ingress:
        enabled: true
        ingressClassName: nginx-tailscale
        hosts:
        - vmagent.eviljungle.com
        tls:
        - hosts:
          - vmagent.eviljungle.com
      spec:
        additionalScrapeConfigs:
          name: victoria-metrics-k8s-stack-helm-values
          key: additionalScrapeConfigs.yaml 
        inlineScrapeConfig: |
          - job_name: 'ipmi'
            metrics_path: '/metrics'
            static_configs:
            - targets:
              - nas.home:9290
          - job_name: 'node'
            static_configs:
            - targets:
              - proxmox-b.home:9100
              - proxmox-c.home:9100
              - opnsense.home:9100
              - nas.home:9100
          - job_name: 'smartctl'
            metrics_path: '/metrics'
            static_configs:
            - targets:
              - nas.home:9633
          - job_name: 'upsc-exporter'
            metrics_path: '/metrics'
            static_configs:
            - targets:
              - proxmox-b.home:8081
              - proxmox-c.home:8081
          - job_name: 'zfs'
            metrics_path: '/metrics'
            static_configs:
            - targets:
              - nas.home:9134
        resources:
          limits:
            cpu: null
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 100Mi

    grafana:
      enabled: false

    prometheus-node-exporter:
      enabled: true

    kube-state-metrics:
      enabled: true

    kubelet:
      enabled: true
      vmScrape:
        spec:
          # drop high cardinality label and useless metrics for cadvisor and kubelet
          metricRelabelConfigs:
          # Drop less useful container CPU metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
          # Drop less useful / always zero container memory metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_memory_(failures_total|mapped_file|swap)'
          # Drop less useful container process metrics.
          - sourceLabels: [__name__]
            action: drop
            # regex: 'container_(file_descriptors|tasks_state|threads_max)'
            regex: 'container_(tasks_state|threads_max)'
          # Drop less useful container filesystem metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
          # Drop less useful container blkio metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_blkio_device_usage_total'
          # Drop container spec metrics that overlap with kube-state-metrics.
          - sourceLabels: [__name__]
            action: drop
            regex: 'container_spec.*'
          # Drop cgroup metrics with no pod.
          - sourceLabels: [id, pod]
            action: drop
            regex: '.+;'
          - action: drop
            sourceLabels: [__name__]
            regex: prober_probe_duration_seconds_bucket
          # Drop high-cardinality labels.
          - action: labeldrop
            regex: (uid|id|name|pod_uid|interface)
          - action: drop
            sourceLabels: [__name__]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeApiServer:
      enabled: true

    kubeControllerManager:
      enabled: false

    coreDns:
      enabled: true

    kubeEtcd:
      enabled: false

    kubeScheduler:
      enabled: false

    kubeProxy:
      enabled: false

    prometheus-operator-crds:
      enabled: true

  valuesFrom:
  - kind: Secret
    name: "victoria-metrics-k8s-stack-helm-values"
    optional: false
