apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: clusterpullsecrets.ops.alexellis.io
spec:
  group: ops.alexellis.io
  names:
    kind: ClusterPullSecret
    listKind: ClusterPullSecretList
    plural: clusterpullsecrets
    singular: clusterpullsecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.secretRef.name
      name: SecretName
      type: string
    - jsonPath: .spec.secretRef.namespace
      name: SecretNamespace
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: ClusterPullSecret is the Schema for the clusterpullsecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterPullSecretSpec defines the desired state of ClusterPullSecret
            properties:
              secretRef:
                description: ObjectMeta contains enough information to locate the
                  referenced Kubernetes resource object in any namespace.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                  namespace:
                    description: Namespace of the referent, when not specified it
                      acts as LocalObjectReference.
                    type: string
                required:
                - name
                type: object
            type: object
          status:
            description: ClusterPullSecretStatus defines the observed state of ClusterPullSecret
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: registry-creds-leader-election-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: registry-creds-registry-creds-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ops.alexellis.io
  resources:
  - clusterpullsecrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ops.alexellis.io
  resources:
  - clusterpullsecrets/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: registry-creds-leader-election-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: registry-creds-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: registry-creds-registry-creds-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: registry-creds-registry-creds-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: registry-creds-controller
  name: registry-creds-registry-creds-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: registry-creds-controller
  template:
    metadata:
      labels:
        control-plane: registry-creds-controller
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /controller
        image: ghcr.io/alexellis/registry-creds:0.3.2@sha256:d4dc1fb7b45bd66626b2b04709522c2e5d0456438576bfa6f3b4ea98adffb3eb
        imagePullPolicy: IfNotPresent
        name: controller
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 45Mi
      terminationGracePeriodSeconds: 10
      tolerations:
      - key: arm
        operator: Exists
