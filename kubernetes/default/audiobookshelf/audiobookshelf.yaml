---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
  namespace: default
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      audiobookshelf:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.25.1@sha256:5154518d8215f8e795fde1c1561080b450af8a6bc0c0bd60c2a920084bf930d6
            env:
              TZ: "America/New_York"
              AUDIOBOOKSHELF_UID: 1001
              AUDIOBOOKSHELF_GID: 1001
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi
    service:
      app:
        primary: true
        controller: audiobookshelf
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/custom-http-errors: "400,404,500,502,503,504"  # Using a smaller set than the default to fix javascript issues with overseer
          # Internal DNS for ISP outage resilience
          external-dns.alpha.kubernetes.io/internal: "true"
          external-dns.alpha.kubernetes.io/target: "10.0.6.150"
        hosts:
          - host: &host abs.eviljungle.com
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
            - *host
      external:
        enabled: true
        className: nginx
        annotations:
          # External DNS for public access via Cloudflare
          external-dns.alpha.kubernetes.io/external: "true"
          external-dns.alpha.kubernetes.io/target: "eviljungle.com"
        hosts:
          - host: *host
            paths:
              - path: /external-dns-only
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        suffix: config
        storageClass: "ceph-block"
        accessMode: ReadWriteOnce
        size: "1Gi"
        globalMounts:
          - path: /config
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
      media:
        enabled: true
        type: nfs
        server: "nas.home"
        path: /mnt/tank/media
        globalMounts:
          - path: /media
            readOnly: true
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
