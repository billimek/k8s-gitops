---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.16.6
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: flux-system
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    toolbox:
      enabled: true
    cephClusterSpec:
      cephConfig:
        global:
          bdev_enable_discard: "true" # quote
          bdev_async_discard_threads: "1" # quote
          osd_class_update_on_start: "false" # quote
          device_failure_prediction_mode: local # requires mgr module
      # cleanupPolicy:
      #   confirmation: "yes-really-destroy-data"
      #   sanitizeDisks:
      #     method: quick
      #     dataSource: zero
      #     iteration: 1
      #   allowUninstallWithVolumes: false
      crashCollector:
        disable: false
        daysToRetain: 30
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        # prometheusEndpoint: http://vmagent-stack.monitoring.svc.cluster.local:8429
      mgr:
        count: 1
        modules:
          - name: diskprediction_local
            enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      mon:
        count: 1 # TODO: change to 3 after migration
        allowMultiplePerNode: true # TODO: change to false after migration
      network:
        provider: host
        connections:
          requireMsgr2: true
      resources:
        mon:
          requests:
            cpu: 35m
            memory: 512Mi
          limits:
            memory: 512Mi
        osd:
          requests:
            cpu: 100m
            memory: 1Gi
          limits:
            memory: 2Gi
      storage:
        useAllNodes: true
        useAllDevices: true
        config:
          osdsPerDevice: "1"

    ingress:
      dashboard:
        host:
          name: &host "rook.t.eviljungle.com" # TODO: change after migration
          path: "/"
          pathType: Prefix
        tls:
        - hosts:
            - *host
        ingressClassName: nginx-tailscale

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ["discard"]
          parameters:
            imageFormat: "2"
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete

    # NOTE: After disabling the filesystem, the filesystem can be removed with the following commands:
    # ceph fs fail ceph-filesystem && ceph fs rm ceph-filesystem --yes-i-really-mean-it
    cephFileSystems: []

    cephObjectStores:
      - name: ceph-objectstore
        # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Object-Storage/ceph-object-store-crd.md#object-store-settings for available configuration
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
            parameters:
              bulk: "true"
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              limits:
                memory: "2Gi"
              requests:
                cpu: "1000m"
                memory: "1Gi"
            instances: 1
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          volumeBindingMode: "Immediate"
          parameters:
            region: us-east-1
        ingress:
          enabled: false
